contract disassembler {

    function FUNC_002C9F63( uint256 arg0,uint256 arg1) public return ()
    {
        mstore(0x20,0x2D);
        mstore(0x0,arg0);
        temp1 = keccak256(0x0,0x40);
        mstore(0x20,temp1);
        mstore(0x0,arg1);
        temp2 = keccak256(0x0,0x40);
        return();
    }

    function redeemToken( uint256 arg0) public return ()
    {
        var2 = arg0;
        mstore(0x80,0xF7630CE300000000000000000000000000000000000000000000000000000000);
        mstore(0x84,uint160(uint160(msg.sender)));
        var12 = uint160(uint160(sload(0x7)));
        var13 = (extcodesize(uint160(uint160(sload(0x7)))) == 0);
        require(extcodesize(uint160(uint160(sload(0x7)))));
        if (delegatecall(gasleft,var12,0x80,0x24,0x80,0x40)) 
        {
            var6 = returndatasize;
            require((0x40 < returndatasize));
            temp5 = mload(0x80);
            temp6 = mload(0xA0);
            var4 = temp6;
            var3 = temp5;
            if ((temp5 > 0x0)) 
            {

                //ISSUE:WARNING:Block timestamp is referred.
                var5 = block.timestamp;
                var6 = func_00004E78();
                mstore(0x40,0x1C0);
                mstore(0x120,mapping_0x2D[var3][arg0].member_0x0);
                mstore(0x140,mapping_0x2D[var3][arg0].member_0x1);
                mstore(0x160,mapping_0x2D[var3][arg0].member_0x2);
                mstore(0x180,mapping_0x2D[var3][arg0].member_0x3);
                mstore(0x1A0,mapping_0x2D[var3][arg0].member_0x4);
                var6 = 0x120;
                temp9 = mload(0x140);
                var7 = (temp9 > 0x0);
                if ((0x0 > temp9)) 
                {
                    if (var7) 
                    {
label_00001807:
                        var8 = VAR_A25069A0;
                        temp10 = mload((0x40 + var6));
                        var9 = (var5 - temp10);
                        assert(VAR_A25069A0);
                        temp11 = (var9 / var8);
                        var7 = temp11;
                        temp12 = mload((0x60 + var6));
                        if ((temp12 > temp11)) 
                        {
                            temp13 = mload((0x60 + var6));
                            if ((temp13 < var7)) 
                            {
label_000018AF:
                                temp14 = mload((0x60 + var6));
                                temp16 = mload((0x20 + var6));
                                var11 = (temp16 * MAPPING_A0DACADA[temp14]);
                                assert(0x3E8);
                                var11 = ((var11 / 0x3E8) * var7);
                                assert(0x1E);
                                mapping_0x2D[var3][var2].member_0x4 = 0x1;
                                temp19 = mload((0x20 + var6));
                                temp20 = ((var11 / 0x1E) + temp19);
                                temp21 = (var11 / 0x1E);
                                VAR_FFF2DF2A = (VAR_FFF2DF2A + temp21);
                                temp22 = (var11 / 0x1E);
                                MAPPING_0D49F221[var3] = (MAPPING_0D49F221[var3] + temp22);
                                temp24 = mload((0x20 + var6));
                                MAPPING_837AC5F3[var4] = (MAPPING_837AC5F3[var4] - temp24);
                                var10 = func_000049CA(uint160(VAR_40F436D9),msg.sender,temp20);
                                mstore(0x1C0,0x8288310000000000000000000000000000000000000000000000000000000000);
                                mstore(0x1C4,0x0);
                                var19 = uint160(uint160(sload(0x7)));
                                require(extcodesize(uint160(uint160(sload(0x7)))));

                                //ISSUE:COMMENT: External call: FUNC_82883100(0x0)
                                var14 = var19.call(0x1C0,0x24,0x1C0,0x20);
                                var14 = (var14 == 0);
                                if (var14) 
                                {
                                    returndatacopy(0x0,0x0,returndatasize);
                                    revert(0x0,returndatasize);
                                }
                                else
                                {
                                    var12 = returndatasize;
                                    require((0x20 < returndatasize));
                                    return();
                                }
                            }
                            else
                            {
label_00001842:
                                mstore(0x1C0,0x8C379A000000000000000000000000000000000000000000000000000000000);
                                mstore(0x1C4,0x20);
                                mstore(0x1E4,0x5);
                                mstore(0x204,0x6572726F72000000000000000000000000000000000000000000000000000000);
                                revert(0x1C0,0x64);
                            }
                        }
                        else
                        {
                            temp38 = mload((0x60 + var6));
                            var7 = temp38;
                            temp39 = mload((0x60 + var6));
                            if ((temp39 < temp38)) 
                            {
                                goto label_000018AF;
                            }
                            else
                            {
                                goto label_00001842;
                            }
                        }
                    }
                    else
                    {
label_0000179A:
                        mstore(0x1C0,0x8C379A000000000000000000000000000000000000000000000000000000000);
                        mstore(0x1C4,0x20);
                        mstore(0x1E4,0x9);
                        mstore(0x204,0x6E6F742065786973740000000000000000000000000000000000000000000000);
                        revert(0x1C0,0x64);
                    }
                }
                else
                {
                    temp40 = mload(0x1A0);
                    if ((temp40 == 0x0)) 
                    {
                        goto label_00001807;
                    }
                    else
                    {
                        goto label_0000179A;
                    }
                }
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0x9);
                mstore(0xC4,0x6572726F72207569640000000000000000000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            returndatacopy(0x0,0x0,returndatasize);
            revert(0x0,returndatasize);
        }
    }

    function FUNC_045585A4( uint256 arg0) public return (var0)
    {
        assert((arg0 < 0xA));
        return(sload((arg0 + 0xE)));
    }

    function name() public return (var0,var1)
    {
        mstore(0x40,(0x80 + (0x20 + (((0x1F + ((((0x100 * ((0x1 & sload(0x2)) == 0)) - 0x1) & sload(0x2)) / 0x2)) / 0x20) * 0x20))));
        mstore(0x80,((((0x100 * ((0x1 & sload(0x2)) == 0)) - 0x1) & sload(0x2)) / 0x2));
        var7 = ((((0x100 * ((0x1 & sload(0x2)) == 0)) - 0x1) & sload(0x2)) / 0x2);
        if (((((0x100 * ((0x1 & sload(0x2)) == 0)) - 0x1) & sload(0x2)) / 0x2)) 
        {
            if ((0x1F < var7)) 
            {
                temp42 = (0xA0 + var7);
                var5 = temp42;
                mstore(0x0,0x2);
                temp43 = keccak256(0x0,0x20);
                var7 = 0xA0;
                var6 = temp43;
label_00001B1F:
                mstore(var7,sload(var6));
                var6 = (0x1 + var6);
                var7 = (0x20 + var7);
                if ((var5 > var7)) 
                {
                    goto label_00001B1F;
                }
                else
                {
                    temp45 = (var5 + (0x1F & (var7 - var5)));
label_00001B3C:
                    return(var1,var2);
                }
            }
            else
            {
                mstore(0xA0,((sload(0x2) / 0x100) * 0x100));
                goto label_00001B3C;
            }
        }
        else
        {
            return(var1,0x80);
        }
    }

    function approve( address arg0,uint256 arg1) public return (var0)
    {
        allowance[uint160(uint160(msg.sender))][uint160(uint160(arg0))] = arg1;
        mstore(0x80,arg1);
        log(0x80,0x20,0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925,uint160(msg.sender),uint160(arg0));
        return(0x1);
    }

    function FUNC_0ABC67B5( uint256 arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(owner))));
        owner = uint160(arg0);
        return();
    }

    mapping(address => uint256) public MAPPING_0D49F221

    function FUNC_146BECFA( uint256 arg0) public return (var0,var1)
    {
        var3 = 0x0;
        var4 = 0x0;

        //ISSUE:LOW: Potential Integer Overflow or Underflow
        var5 = (arg0 * 0x5AF3107A4000);
        var6 = level;
        var8 = (VAR_A25069A0 * 0xF);

        //ISSUE:WARNING:Block timestamp is referred.
        var9 = (block.timestamp - startTime);
        assert((VAR_A25069A0 * 0xF));
        temp61 = (var9 / var8);
        var7 = temp61;
        var8 = (temp61 > var6);
        if ((var6 > temp61)) 
        {
            if (var8) 
            {
label_00001D32:
                var6 = var7;
label_00001D35:
                if ((0xA < var6)) 
                {
                    goto label_00001E53;
                }
                else
                {
                    goto label_00001D3F;
                }
            }
            else if ((0xA < var6)) 
            {
                if ((0x0 > var5)) 
                {
                    var8 = 0x5AF3107A4000;
                    var9 = 0x0;
                    if (0x5AF3107A4000) 
                    {
label_00001F1E:
                        temp62 = (var9 / var8);
                        return(var3,temp62);
                    }
                    else
                    {
label_00001F1D:
                        throw();
                    }
                }
                else
                {
label_00001E5D:
                    var10 = VAR_A25069A0;

                    //ISSUE:WARNING:Block timestamp is referred.
                    var11 = (block.timestamp - startTime);
                    assert(VAR_A25069A0);
                    temp63 = (var11 / var10);
                    var8 = (temp63 + 0x1);
                    var11 = (var5 * tokenPrice);
                    assert(0xE8D4A51000);
                    temp65 = (var11 / 0xE8D4A51000);
                    if ((temp65 > (VAR_38540D19 - MAPPING_ADBE3834[var8]))) 
                    {
                        var3 = (var3 + (VAR_38540D19 - MAPPING_ADBE3834[var8]));
                        var10 = tokenPrice;
                        var11 = ((VAR_38540D19 - MAPPING_ADBE3834[var8]) * 0xE8D4A51000);
                        assert(tokenPrice);
                        temp68 = (var4 + (var11 / var10));
                        var4 = temp68;
label_00001F0A:
label_00001F0D:
                        var8 = 0x5AF3107A4000;
                        var9 = var4;
                        if (0x5AF3107A4000) 
                        {
                            goto label_00001F1E;
                        }
                        else
                        {
                            goto label_00001F1D;
                        }
                    }
                    else
                    {
                        var3 = (var3 + var9);
                        var4 = (var4 + var5);
                        goto label_00001F0A;
                    }
                }
            }
            else
            {
label_00001D3F:
                var8 = var6;
label_00001D44:
                if ((0xA < var8)) 
                {
label_00001E51:
label_00001E53:
                    if ((0x0 > var5)) 
                    {
                        goto label_00001F0D;
                    }
                    else
                    {
                        goto label_00001E5D;
                    }
                }
                else
                {
                    var10 = var8;
                    assert((var8 < 0xA));
                    var9 = sload((var10 + 0xE));
                    var12 = var8;
                    assert((var8 < 0xA));
                    var10 = (sload((var12 + 0x18)) * 0xE8D4A51000);
                    assert(var9);
                    if (((var10 / var9) > var5)) 
                    {
                        var11 = var8;
                        assert((var8 < 0xA));
                        var10 = (var5 * sload((var11 + 0xE)));
                        assert(0xE8D4A51000);
                        var3 = (var3 + (var10 / 0xE8D4A51000));
                        var4 = (var4 + var5);
                        var5 = 0x0;
                        goto label_00001E51;
                    }
                    else
                    {
                        var10 = var8;
                        assert((var8 < 0xA));
                        var3 = (var3 + sload((var10 + 0x18)));
                        var10 = var8;
                        assert((var8 < 0xA));
                        var9 = sload((var10 + 0xE));
                        var12 = var8;
                        assert((var8 < 0xA));
                        var10 = (sload((var12 + 0x18)) * 0xE8D4A51000);
                        assert(var9);
                        temp69 = (var4 + (var10 / var9));
                        var4 = temp69;
                        var10 = var8;
                        assert((var8 < 0xA));
                        var9 = sload((var10 + 0xE));
                        var12 = var8;
                        assert((var8 < 0xA));
                        var10 = (sload((var12 + 0x18)) * 0xE8D4A51000);
                        assert(var9);
                        temp70 = (var5 - (var10 / var9));
                        var5 = temp70;
                        var8 = (0x1 + var8);
                        goto label_00001D44;
                    }
                }
            }
        }
        else if ((var7 > 0xA)) 
        {
            goto label_00001D35;
        }
        else
        {
            goto label_00001D32;
        }
    }

    uint256 public totalSupply;

    function getInfo( uint256 arg0) public return ()
    {
        mstore(0x0,arg0);
        mstore(0x20,0x2B);
        temp72 = keccak256(0x0,0x40);
        mstore(0x0,arg0);
        mstore(0x20,0x28);
        temp73 = keccak256(0x0,0x40);
        mstore(0x0,arg0);
        mstore(0x20,0x2C);
        temp74 = keccak256(0x0,0x40);
        return();
    }

    function FUNC_2029CB50( uint256 arg0,uint256 arg1) public return ()
    {

        //ISSUE:WARNING:Block timestamp is referred.
        var12 = block.timestamp;
        var13 = func_00004E78();
        mstore(0x40,0x120);
        mstore(0x80,mapping_0x2D[arg0][arg1].member_0x0);
        mstore(0xA0,mapping_0x2D[arg0][arg1].member_0x1);
        mstore(0xC0,mapping_0x2D[arg0][arg1].member_0x2);
        mstore(0xE0,mapping_0x2D[arg0][arg1].member_0x3);
        mstore(0x100,mapping_0x2D[arg0][arg1].member_0x4);
        var13 = 0x80;
        temp78 = mload(0xE0);
        temp80 = mload(0xA0);
        var17 = (temp80 * MAPPING_A0DACADA[temp78]);
        assert(0x3E8);
        var15 = (var17 / 0x3E8);
        var17 = VAR_A25069A0;
        temp81 = mload(0xC0);
        var18 = (var12 - temp81);
        assert(VAR_A25069A0);
        temp82 = (var18 / var17);
        var16 = temp82;
        temp83 = mload(0xE0);
        if ((temp83 > temp82)) 
        {
            var17 = 0x1E;
            var18 = (var15 * var16);
            if (0x1E) 
            {
label_000020A3:
                temp84 = (var18 / var17);
                var15 = temp84;
                temp85 = mload((0x60 + var13));
                temp86 = mload((0x40 + var13));
                if (((temp86 + (temp85 * VAR_A25069A0)) > var12)) 
                {
                    temp90 = mload((0x20 + var13));
                    temp89 = mload((0x40 + var13));
                    temp88 = mload((0x60 + var13));
                    temp87 = mload((0x80 + var13));
                    return();
                }
                else
                {
                    temp94 = mload((0x20 + var13));
                    temp93 = mload((0x40 + var13));
                    temp92 = mload((0x60 + var13));
                    temp91 = mload((0x80 + var13));
                    return();
                }
            }
            else
            {
label_000020A2:
                throw();
            }
        }
        else
        {
            temp95 = mload(0xE0);
            var16 = temp95;
            var17 = 0x1E;
            var18 = (var15 * temp95);
            if (0x1E) 
            {
                goto label_000020A3;
            }
            else
            {
                goto label_000020A2;
            }
        }
    }

    function gasprice_bit_ether( int128 arg0) public return (var0)
    {
        if ((allowance[uint160(uint160(arg0))][uint160(uint160(msg.sender))] > arg2)) 
        {
            var6 = func_00004CF7(allowance[uint160(uint160(arg0))][uint160(uint160(msg.sender))],arg2);
            allowance[uint160(uint160(arg0))][uint160(uint160(msg.sender))] = var6;
            var5 = func_000049CA(arg0,arg1,arg2);
            return(0x1);
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0xD);
            mstore(0xC4,0x6E6F7420616C6C6F77616E636500000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_271292F5( uint256 arg0,uint256 arg1) public return (var0)
    {
        if ((uint160(msg.sender) == uint160(uint160(VAR_40F436D9)))) 
        {
            var6 = getPrice();

            //ISSUE:LOW: Potential Integer Overflow or Underflow
            var9 = ((arg1 * var6) * 0x5);
            assert(0x64);
            var8 = (var9 / 0x64);
            assert(0xE8D4A51000);
            var6 = (var8 / 0xE8D4A51000);
            if (((var8 / 0xE8D4A51000) < balanceOf[uint160(uint160(arg0))])) 
            {
                balanceOf[uint160(uint160(arg0))] = (balanceOf[uint160(uint160(arg0))] - var6);
                totalSupply = (totalSupply - var6);
                totalBurn = (totalBurn + var6);
                mstore(0x80,var6);
                log(0x80,0x20,0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5,uint160(arg0));
                return(0x1);
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0x10);
                mstore(0xC4,0x746F6B656E206E6F7420656E6F75676800000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x9);
            mstore(0xC4,0x6F6E6C792067616D650000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_2BC9D5A1( uint256 arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(owner))));
        dev = uint160(arg0);
        return();
    }

    function FUNC_2D2F370F( uint256 arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        VAR_38540D19 = arg0;
        return();
    }

    function FUNC_2FE0BB63( uint256 arg0,uint256 arg1) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        assert((arg1 < 0x3));
        sstore((arg1 + 0x30),uint160(arg0));
        return();
    }

    uint8 public decimals;

    function FUNC_32763C36( uint256 arg0) public return ()
    {
        var2 = arg0;
        mstore(0x80,0xF7630CE300000000000000000000000000000000000000000000000000000000);
        mstore(0x84,uint160(uint160(msg.sender)));
        var12 = uint160(uint160(sload(0x7)));
        var13 = (extcodesize(uint160(uint160(sload(0x7)))) == 0);
        require(extcodesize(uint160(uint160(sload(0x7)))));
        if (delegatecall(gasleft,var12,0x80,0x24,0x80,0x40)) 
        {
            var6 = returndatasize;
            require((0x40 < returndatasize));
            temp112 = mload(0x80);
            temp113 = mload(0xA0);
            var4 = temp113;
            var3 = temp112;
            if ((temp112 > 0x0)) 
            {

                //ISSUE:WARNING:Block timestamp is referred.
                var5 = block.timestamp;
                var6 = func_00004E78();
                mstore(0x40,0x120);
                mstore(0x80,mapping_0x2D[var3][arg0].member_0x0);
                mstore(0xA0,mapping_0x2D[var3][arg0].member_0x1);
                mstore(0xC0,mapping_0x2D[var3][arg0].member_0x2);
                mstore(0xE0,mapping_0x2D[var3][arg0].member_0x3);
                mstore(0x100,mapping_0x2D[var3][arg0].member_0x4);
                var6 = 0x80;
                temp116 = mload(0xA0);
                var7 = (temp116 > 0x0);
                if ((0x0 > temp116)) 
                {
                    if (var7) 
                    {
label_000029D9:
                        var8 = VAR_A25069A0;
                        temp117 = mload((0x40 + var6));
                        var9 = (var5 - temp117);
                        assert(VAR_A25069A0);
                        temp118 = (var9 / var8);
                        var7 = temp118;
                        temp119 = mload((0x60 + var6));
                        if ((temp119 > temp118)) 
                        {
                            temp120 = mload((0x60 + var6));
                            if ((temp120 < var7)) 
                            {
label_00002A81:
                                temp121 = mload((0x60 + var6));
                                temp123 = mload((0x20 + var6));
                                var11 = (temp123 * MAPPING_A0DACADA[temp121]);
                                assert(0x3E8);
                                var11 = ((var11 / 0x3E8) * var7);
                                assert(0x1E);
                                mstore((0x40 + var6),var5);
                                temp124 = mload((0x20 + var6));
                                mstore((0x20 + var6),(temp124 + (var11 / 0x1E)));
                                temp127 = mload((var6 + 0x0));
                                mapping_0x2D[var3][var2].member_0x0 = temp127;
                                temp128 = mload((var6 + 0x20));
                                mapping_0x2D[var3][var2].member_0x1 = temp128;
                                temp129 = mload((var6 + 0x40));
                                mapping_0x2D[var3][var2].member_0x2 = temp129;
                                temp130 = mload((var6 + 0x60));
                                mapping_0x2D[var3][var2].member_0x3 = temp130;
                                temp131 = mload((var6 + 0x80));
                                mapping_0x2D[var3][var2].member_0x4 = temp131;
                                VAR_C8ADAE4A = (0x1 + VAR_C8ADAE4A);
                                temp133 = mload((var6 + 0x0));
                                mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x0 = temp133;
                                temp134 = mload((var6 + 0x20));
                                mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x1 = temp134;
                                temp135 = mload((var6 + 0x40));
                                mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x2 = temp135;
                                temp136 = mload((var6 + 0x60));
                                mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x3 = temp136;
                                temp137 = mload((var6 + 0x80));
                                mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x4 = temp137;
                                temp138 = (VAR_FFF2DF2A + (var11 / 0x1E));
                                VAR_FFF2DF2A = temp138;
                                temp140 = (MAPPING_0D49F221[var3] + (var11 / 0x1E));
                                MAPPING_0D49F221[var3] = temp140;
                                temp142 = (MAPPING_837AC5F3[var4] + (var11 / 0x1E));
                                MAPPING_837AC5F3[var4] = temp142;
                                mstore(0x120,0x8288310000000000000000000000000000000000000000000000000000000000);
                                mstore(0x124,0x0);
                                var18 = uint160(uint160(sload(0x7)));
                                require(extcodesize(uint160(uint160(sload(0x7)))));

                                //ISSUE:COMMENT: External call: FUNC_82883100(0x0)
                                var13 = var18.call(0x120,0x24,0x120,0x20);
                                var13 = (var13 == 0);
                                if (var13) 
                                {
                                    returndatacopy(0x0,0x0,returndatasize);
                                    revert(0x0,returndatasize);
                                }
                                else
                                {
                                    var11 = returndatasize;
                                    require((0x20 < returndatasize));
                                    return();
                                }
                            }
                            else
                            {
label_00002A14:
                                mstore(0x120,0x8C379A000000000000000000000000000000000000000000000000000000000);
                                mstore(0x124,0x20);
                                mstore(0x144,0x7);
                                mstore(0x164,0x6572726F72206E00000000000000000000000000000000000000000000000000);
                                revert(0x120,0x64);
                            }
                        }
                        else
                        {
                            temp146 = mload((0x60 + var6));
                            var7 = temp146;
                            temp147 = mload((0x60 + var6));
                            if ((temp147 < temp146)) 
                            {
                                goto label_00002A81;
                            }
                            else
                            {
                                goto label_00002A14;
                            }
                        }
                    }
                    else
                    {
label_0000296C:
                        mstore(0x120,0x8C379A000000000000000000000000000000000000000000000000000000000);
                        mstore(0x124,0x20);
                        mstore(0x144,0x9);
                        mstore(0x164,0x6E6F742065786973740000000000000000000000000000000000000000000000);
                        revert(0x120,0x64);
                    }
                }
                else
                {
                    temp148 = mload(0x100);
                    if ((temp148 == 0x0)) 
                    {
                        goto label_000029D9;
                    }
                    else
                    {
                        goto label_0000296C;
                    }
                }
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0x9);
                mstore(0xC4,0x6572726F72207569640000000000000000000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            returndatacopy(0x0,0x0,returndatasize);
            revert(0x0,returndatasize);
        }
    }

    uint256 public VAR_38540D19;

    function FUNC_3B29C348( uint256 arg0,uint256 arg1) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        var4 = (arg0 > 0x0);
        if ((0x0 > arg0)) 
        {
            if (var4) 
            {
label_00002D37:
                MAPPING_A0DACADA[var2] = var3;
label_00002D4F:
                return();
            }
            else
            {
                return();
            }
        }
        else if ((0x0 > arg1)) 
        {
            goto label_00002D4F;
        }
        else
        {
            goto label_00002D37;
        }
    }

    uint256 public totalBurn;

    uint160 public VAR_40F436D9;

    function collate_propagate_storage( bytes16 arg0) public return (var0)
    {
        if ((arg0 < balanceOf[uint160(uint160(msg.sender))])) 
        {
            var4 = func_00004CF7(balanceOf[uint160(uint160(msg.sender))],arg0);
            balanceOf[uint160(uint160(msg.sender))] = var4;
            var4 = func_00004CF7(totalSupply,arg0);
            totalSupply = var4;
            var4 = func_00004D82(totalBurn,arg0);
            totalBurn = var4;
            mstore(0x80,arg0);
            log(0x80,0x20,0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5,uint160(msg.sender));
            return(0x1);
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x5);
            mstore(0xC4,0x6572726F72000000000000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_50973168( uint256 arg0) public return ()
    {
        mstore(0x20,0x2F);
        mstore(0x0,arg0);
        temp156 = keccak256(0x0,0x40);
        return();
    }

    function FUNC_53B6A21A( uint256 arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(owner))));
        if ((uint160(0x0) == uint160(uint160(VAR_40F436D9)))) 
        {
            return();
        }
        else
        {
            var7 = uint160(uint160(VAR_40F436D9)).call.gas(((arg0 == 0) * 0x8FC)).value(arg0)(0x80,0x0);
            if (var7) 
            {
                mstore(0x80,arg0);
                log(0x80,0x20,0xBE5FDFC52F6C9ADC1F39A5887B8187D7CB44DB6333FC49C3D4A4F2CA25271F1,uint160(uint160(VAR_40F436D9)));
                return();
            }
            else
            {
                returndatacopy(0x0,0x0,returndatasize);
                revert(0x0,returndatasize);
            }
        }
    }

    function FUNC_593D16B3( uint256 arg0) public return ()
    {
        mstore(0x20,0xC);
        mstore(0x0,arg0);
        temp159 = keccak256(0x0,0x40);
        return();
    }

    function FUNC_5DAAD7CE( uint256 arg0,uint256 arg1,uint256 arg2) public return ()
    {
        if ((uint8(mapping_0x33[uint160(uint160(msg.sender))]) == 0x1)) 
        {
            var4 = func_000049CA(arg0,arg1,arg2);
            return();
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x9);
            mstore(0xC4,0x666F7262696464656E0000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    uint256 public level;

    mapping(address => uint256) public balanceOf

    function setGameAddress( address arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(owner))));
        VAR_40F436D9 = uint160(arg0);
        sstore(0x7,uint160(arg0));
        return();
    }

    function FUNC_73339565( uint256 arg0,uint256 arg1) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        var4 = func_00004EA8(0xE,arg1,0xA);
        var4 = func_00004EA8(0x18,arg0,0xA);
        return();
    }

    uint256 public startTime;

    uint256 public tokenPrice;

    mapping(address => uint256) public MAPPING_837AC5F3

    uint160 public owner;

    uint160 public dev;

    function symbol() public return (var0,var1)
    {
        mstore(0x40,(0x80 + (0x20 + (((0x1F + ((((0x100 * ((0x1 & sload(0x3)) == 0)) - 0x1) & sload(0x3)) / 0x2)) / 0x20) * 0x20))));
        mstore(0x80,((((0x100 * ((0x1 & sload(0x3)) == 0)) - 0x1) & sload(0x3)) / 0x2));
        var7 = ((((0x100 * ((0x1 & sload(0x3)) == 0)) - 0x1) & sload(0x3)) / 0x2);
        if (((((0x100 * ((0x1 & sload(0x3)) == 0)) - 0x1) & sload(0x3)) / 0x2)) 
        {
            if ((0x1F < var7)) 
            {
                temp169 = (0xA0 + var7);
                var5 = temp169;
                mstore(0x0,0x3);
                temp170 = keccak256(0x0,0x20);
                var7 = 0xA0;
                var6 = temp170;
label_000034B8:
                mstore(var7,sload(var6));
                var6 = (0x1 + var6);
                var7 = (0x20 + var7);
                if ((var5 > var7)) 
                {
                    goto label_000034B8;
                }
                else
                {
                    temp172 = (var5 + (0x1F & (var7 - var5)));
label_000034D5:
                    return(var1,var2);
                }
            }
            else
            {
                mstore(0xA0,((sload(0x3) / 0x100) * 0x100));
                goto label_000034D5;
            }
        }
        else
        {
            return(var1,0x80);
        }
    }

    function getPrice() public return (var0)
    {
        var7 = 0x0;
        var8 = level;
        var10 = (VAR_A25069A0 * 0xF);

        //ISSUE:WARNING:Block timestamp is referred.
        var11 = (block.timestamp - startTime);
        assert((VAR_A25069A0 * 0xF));
        temp104 = (var11 / var10);
        var9 = temp104;
        var10 = (temp104 > var8);
        if ((var8 > temp104)) 
        {
            if (var10) 
            {
label_00003514:
                var8 = var9;
label_00003517:
                if ((0xA < var8)) 
                {
                    goto label_0000353A;
                }
                else
                {
                    goto label_00003521;
                }
            }
            else if ((0xA < var8)) 
            {
label_0000353A:
                var7 = tokenPrice;
label_00003542:
                return(var7);
            }
            else
            {
label_00003521:
                var11 = var8;
                assert((var8 < 0xA));
                var7 = sload((var11 + 0xE));
                goto label_00003542;
            }
        }
        else if ((var9 > 0xA)) 
        {
            goto label_00003517;
        }
        else
        {
            goto label_00003514;
        }
    }

    mapping(address => uint256) public MAPPING_9998C29D

    mapping(address => uint256) public MAPPING_A0DACADA

    uint256 public VAR_A25069A0;

    function FUNC_A884BB90( uint256 arg0,uint256 arg1) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        mapping_0x33[uint160(uint160(arg0))] = arg1;
        return();
    }

    function many_msg_babbage( bytes1 arg0) public return ()
    {
        var3 = func_000049CA(msg.sender,arg0,arg1);
        return();
    }

    function FUNC_ABB1DC44() public return ()
    {
        var6 = getPrice();
        var5 = var6;
        var6 = 0x0;
        var7 = level;
        var9 = (VAR_A25069A0 * 0xF);

        //ISSUE:WARNING:Block timestamp is referred.
        var10 = (block.timestamp - startTime);
        assert((VAR_A25069A0 * 0xF));
        temp188 = (var10 / var9);
        var8 = temp188;
        var9 = (temp188 > var7);
        if ((var7 > temp188)) 
        {
            if (var9) 
            {
label_00003688:
                var7 = var8;
label_0000368B:
                if ((0xA < var7)) 
                {
                    goto label_000036AC;
                }
                else
                {
                    goto label_00003695;
                }
            }
            else if ((0xA < var7)) 
            {
label_000036AC:
                var12 = VAR_A25069A0;

                //ISSUE:WARNING:Block timestamp is referred.
                var13 = (block.timestamp - startTime);
                assert(VAR_A25069A0);
                temp189 = (var13 / var12);
                var6 = (VAR_38540D19 - MAPPING_ADBE3834[(temp189 + 0x1)]);
label_000036DB:
                return();
            }
            else
            {
label_00003695:
                var10 = var7;
                assert((var7 < 0xA));
                var6 = sload((var10 + 0x18));
                goto label_000036DB;
            }
        }
        else if ((var8 > 0xA)) 
        {
            goto label_0000368B;
        }
        else
        {
            goto label_00003688;
        }
    }

    mapping(address => uint256) public MAPPING_ADBE3834

    uint256 public VAR_B45D78AB;

    uint256 public VAR_C8ADAE4A;

    function FUNC_C8BCE912( uint256 arg0) public return ()
    {
        var8 = func_00004E78();
        mstore(0x40,0x120);
        mstore(0x80,mapping_0x2F[arg0].member_0x0);
        mstore(0xA0,mapping_0x2F[arg0].member_0x1);
        mstore(0xC0,mapping_0x2F[arg0].member_0x2);
        mstore(0xE0,mapping_0x2F[arg0].member_0x3);
        mstore(0x100,mapping_0x2F[arg0].member_0x4);
        temp199 = mload(0x80);
        temp198 = mload(0xA0);
        temp197 = mload(0xC0);
        temp196 = mload(0xE0);
        temp195 = mload(0x100);
        var1 = temp199;
        return();
    }

    function FUNC_CDFDFE3F( uint256 arg0,uint256 arg1,uint256 arg2) public return ()
    {
        if ((uint160(msg.sender) == uint160(uint160(VAR_40F436D9)))) 
        {
            var4 = func_000049CA(arg0,arg1,arg2);
            return();
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x9);
            mstore(0xC4,0x6F6E6C792067616D650000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_D2851499( uint256 arg0,uint256 arg1) public return ()
    {
        if ((uint8(mapping_0x33[uint160(uint160(msg.sender))]) == 0x1)) 
        {
            if ((arg1 < balanceOf[uint160(uint160(arg0))])) 
            {

                //ISSUE:LOW: Potential Integer Overflow or Underflow
                balanceOf[uint160(uint160(arg0))] = (balanceOf[uint160(uint160(arg0))] - arg1);
                totalSupply = (totalSupply - arg1);
                totalBurn = (totalBurn + arg1);
                mstore(0x80,arg1);
                log(0x80,0x20,0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5,uint160(arg0));
                return();
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0x10);
                mstore(0xC4,0x746F6B656E206E6F7420656E6F75676800000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x9);
            mstore(0xC4,0x666F7262696464656E0000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function buy( uint256 arg0) public return ()
    {
        var2 = arg0;
        if ((extcodesize(msg.sender) == 0x0)) 
        {
            if ((0x16345785D8A0000 < msg.value)) 
            {
                if ((0x21E19E0C9BAB2400000 > msg.value)) 
                {
                    var5 = msg.sender;
                    if ((msg.value == 0xDBD2FC137A30000)) 
                    {
                        var7 = 0x1;
label_00003C59:
                        mstore(0x80,0xF3A4CA8600000000000000000000000000000000000000000000000000000000);
                        mstore(0x84,uint160(uint160(var5)));
                        mstore(0xA4,var2);
                        mstore(0xC4,var7);
                        var18 = uint160(uint160(sload(0x7)));
                        require(extcodesize(uint160(uint160(sload(0x7)))));

                        //ISSUE:COMMENT: External call: FUNC_F3A4CA86(uint160(uint160(var5)),var2,var7)
                        var13 = var18.call(0x80,0x64,0x80,0x60);
                        var13 = (var13 == 0);
                        if (var13) 
                        {
                            returndatacopy(0x0,0x0,returndatasize);
                            revert(0x0,returndatasize);
                        }
                        else
                        {
                            var11 = returndatasize;
                            require((0x60 < returndatasize));
                            temp208 = mload(0x80);
                            temp209 = mload(0xA0);
                            temp210 = mload(0xC0);
                            var7 = temp209;
                            if (temp208) 
                            {
                                var11 = msg.value;
                                var12 = 0x0;
                                var14 = (VAR_A25069A0 * 0xF);

                                //ISSUE:WARNING:Block timestamp is referred.
                                var15 = (block.timestamp - startTime);
                                assert((VAR_A25069A0 * 0xF));
                                temp211 = (var15 / var14);
                                var13 = temp211;
                                var14 = (temp211 > level);
                                if ((level > temp211)) 
                                {
                                    if (var14) 
                                    {
label_00003E41:
                                        level = var13;
label_00003E48:
                                        if ((0xA < level)) 
                                        {
                                            goto label_00003FE4;
                                        }
                                        else
                                        {
                                            goto label_00003E54;
                                        }
                                    }
                                    else if ((0xA < level)) 
                                    {
                                        if ((0x0 > var11)) 
                                        {
                                            totalSale = (totalSale + 0x0);
                                            var13 = func_000049CA(this.address,var5,0x0);
label_00004114:
                                            mstore(0x40,0x120);
                                            mstore(0x80,var7);
                                            mstore(0xA0,uint160(var5));
                                            mstore(0xC0,var12);
                                            mstore(0xE0,msg.value);

                                            //ISSUE:WARNING:Block timestamp is referred.
                                            mstore(0x100,block.timestamp);
                                            VAR_B45D78AB = (0x1 + VAR_B45D78AB);
                                            temp213 = mload(0x80);
                                            mapping_0xC[(0x1 + VAR_B45D78AB)].member_0x0 = temp213;
                                            temp214 = mload(0xA0);
                                            mapping_0xC[(0x1 + VAR_B45D78AB)].member_0x1 = uint160(temp214);
                                            temp215 = mload(0xC0);
                                            mapping_0xC[(0x1 + VAR_B45D78AB)].member_0x2 = temp215;
                                            temp216 = mload(0xE0);
                                            mapping_0xC[(0x1 + VAR_B45D78AB)].member_0x3 = temp216;
                                            temp217 = mload(0x100);
                                            mapping_0xC[(0x1 + VAR_B45D78AB)].member_0x4 = temp217;
                                            assert((0x0 < 0x3));
                                            var15 = uint160(sload(0x30));
                                            var17 = (msg.value * 0x42);
                                            assert(0x64);
                                            var13 = func_00004E0C(var15,(var17 / 0x64));
                                            assert((0x1 < 0x3));
                                            var15 = uint160(sload(0x31));
                                            var17 = (msg.value * 0x1E);
                                            assert(0x64);
                                            var13 = func_00004E0C(var15,(var17 / 0x64));
                                            assert((0x2 < 0x3));
                                            var15 = uint160(sload(0x32));
                                            var17 = (msg.value * 0x4);
                                            assert(0x64);
                                            var13 = func_00004E0C(var15,(var17 / 0x64));
                                            mstore(0x120,0x8288310000000000000000000000000000000000000000000000000000000000);
                                            mstore(0x124,0x0);
                                            var22 = uint160(uint160(sload(0x7)));
                                            require(extcodesize(uint160(uint160(sload(0x7)))));

                                            //ISSUE:COMMENT: External call: FUNC_82883100(0x0)
                                            var17 = var22.call(0x120,0x24,0x120,0x20);
                                            var17 = (var17 == 0);
                                            if (var17) 
                                            {
                                                returndatacopy(0x0,0x0,returndatasize);
                                                revert(0x0,returndatasize);
                                            }
                                            else
                                            {
                                                var15 = returndatasize;
                                                require((0x20 < returndatasize));
                                                return();
                                            }
                                        }
                                        else
                                        {
label_00003FEE:
                                            var16 = VAR_A25069A0;

                                            //ISSUE:WARNING:Block timestamp is referred.
                                            var17 = (block.timestamp - startTime);
                                            assert(VAR_A25069A0);
                                            temp221 = (var17 / var16);
                                            var14 = (temp221 + 0x1);
                                            var15 = (VAR_38540D19 - MAPPING_ADBE3834[(temp221 + 0x1)]);
                                            var17 = (var11 * tokenPrice);
                                            assert(0xE8D4A51000);
                                            if ((var15 > (var17 / 0xE8D4A51000))) 
                                            {
                                                var16 = (var11 * tokenPrice);
                                                assert(0xE8D4A51000);
                                                var12 = (var12 + (var16 / 0xE8D4A51000));
                                                var16 = (var11 * tokenPrice);
                                                assert(0xE8D4A51000);
                                                temp224 = (MAPPING_ADBE3834[var14] + (var16 / 0xE8D4A51000));
                                                MAPPING_ADBE3834[var14] = temp224;
label_000040F9:
                                                totalSale = (totalSale + var12);
                                                var13 = func_000049CA(this.address,var5,var12);
                                                goto label_00004114;
                                            }
                                            else
                                            {
                                                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                                                mstore(0x84,0x20);
                                                mstore(0xA4,0xA);
                                                mstore(0xC4,0x6E6F7420656E6F75676800000000000000000000000000000000000000000000);
                                                revert(0x80,0x64);
                                            }
                                        }
                                    }
                                    else
                                    {
label_00003E54:
                                        var15 = level;
label_00003E60:
                                        if ((0xA < var15)) 
                                        {
label_00003FDD:
label_00003FE4:
                                            if ((0x0 > var11)) 
                                            {
                                                goto label_000040F9;
                                            }
                                            else
                                            {
                                                goto label_00003FEE;
                                            }
                                        }
                                        else
                                        {
                                            var17 = var15;
                                            assert((var15 < 0xA));
                                            var16 = sload((var17 + 0xE));
                                            var19 = var15;
                                            assert((var15 < 0xA));
                                            var17 = (sload((var19 + 0x18)) * 0xE8D4A51000);
                                            assert(var16);
                                            if (((var17 / var16) > var11)) 
                                            {
                                                level = var15;
                                                var17 = var15;
                                                assert((var15 < 0xA));
                                                var16 = sload((var17 + 0xE));
                                                var19 = var15;
                                                assert((var15 < 0xA));
                                                var17 = (sload((var19 + 0x18)) * 0xE8D4A51000);
                                                assert(var16);
                                                if ((var11 == (var17 / var16))) 
                                                {
                                                    level = (var15 + 0x1);
                                                    var16 = 0xE8D4A51000;
                                                    var17 = 0xE;
                                                    var18 = var15;
                                                    if ((var15 < 0xA)) 
                                                    {
                                                        goto label_00003F75;
                                                    }
                                                    else
                                                    {
                                                        goto label_00003F74;
                                                    }
                                                }
                                                else
                                                {
                                                    var16 = 0xE8D4A51000;
                                                    var17 = 0xE;
                                                    var18 = var15;
                                                    if ((var15 < 0xA)) 
                                                    {
label_00003F75:
                                                        var17 = (var11 * sload((var18 + var17)));
                                                        assert(var16);
                                                        temp225 = (var12 + (var17 / var16));
                                                        var12 = temp225;
                                                        var18 = var15;
                                                        assert((var15 < 0xA));
                                                        var17 = (var11 * sload((var18 + 0xE)));
                                                        assert(0xE8D4A51000);
                                                        var16 = (var17 / 0xE8D4A51000);
                                                        var18 = var15;
                                                        assert((var15 < 0xA));
                                                        temp226 = (sload((var18 + 0x18)) - var16);
                                                        temp227 = (var18 + 0x18);
                                                        sstore(temp227,temp226);
                                                        var11 = 0x0;
                                                        goto label_00003FDD;
                                                    }
                                                    else
                                                    {
label_00003F74:
                                                        throw();
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                var17 = var15;
                                                assert((var15 < 0xA));
                                                var12 = (var12 + sload((var17 + 0x18)));
                                                var17 = var15;
                                                assert((var15 < 0xA));
                                                var16 = sload((var17 + 0xE));
                                                var19 = var15;
                                                assert((var15 < 0xA));
                                                var17 = (sload((var19 + 0x18)) * 0xE8D4A51000);
                                                assert(var16);
                                                temp228 = (var11 - (var17 / var16));
                                                var11 = temp228;
                                                var18 = var15;
                                                assert((var15 < 0xA));
                                                temp229 = (var18 + 0x18);
                                                sstore(temp229,0x0);
                                                level = (var15 + 0x1);
                                                var15 = (0x1 + var15);
                                                goto label_00003E60;
                                            }
                                        }
                                    }
                                }
                                else if ((var13 > 0xA)) 
                                {
                                    goto label_00003E48;
                                }
                                else
                                {
                                    goto label_00003E41;
                                }
                            }
                            else
                            {
                                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                                mstore(0x84,0x20);
                                mstore(0xA4,0x7);
                                mstore(0xC4,0x7265672065727200000000000000000000000000000000000000000000000000);
                                revert(0x80,0x64);
                            }
                        }
                    }
                    else
                    {
                        var7 = 0x0;
                        goto label_00003C59;
                    }
                }
                else
                {
                    mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                    mstore(0x84,0x20);
                    mstore(0xA4,0xE);
                    mstore(0xC4,0x3C3D203130303030206574686572000000000000000000000000000000000000);
                    revert(0x80,0x64);
                }
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0xC);
                mstore(0xC4,0x3E3D20302E312065746865720000000000000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x11);
            mstore(0xC4,0x736F7272792068756D616E73206F6E6C79000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_D9E17337( uint256 arg0) public return (var0)
    {
        assert((arg0 < 0xA));
        return(sload((arg0 + 0x18)));
    }

    mapping(address => mapping(address => uint256)) public allowance

    function FUNC_E56A301C( uint256 arg0) public return ()
    {
        require((uint160(msg.sender) == uint160(uint160(dev))));
        if ((arg0 > 0x0)) 
        {
            tokenPrice = arg0;
            return();
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x2);
            mstore(0xC4,0x3E30000000000000000000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function FUNC_E5A688FC( uint256 arg0,uint256 arg1,uint256 arg2) public return ()
    {
        if ((0xBA43B7400 < arg0)) 
        {
            if ((MAPPING_A0DACADA[arg1] > 0x0)) 
            {
                mstore(0x80,0xF3A4CA8600000000000000000000000000000000000000000000000000000000);
                mstore(0x84,uint160(uint160(msg.sender)));
                mstore(0xA4,arg2);
                mstore(0xC4,0x0);
                var17 = uint160(uint160(sload(0x7)));
                require(extcodesize(uint160(uint160(sload(0x7)))));

                //ISSUE:COMMENT: External call: FUNC_F3A4CA86(uint160(uint160(msg.sender)),arg2,0x0)
                var12 = var17.call(0x80,0x64,0x80,0x60);
                var12 = (var12 == 0);
                if (var12) 
                {
                    returndatacopy(0x0,0x0,returndatasize);
                    revert(0x0,returndatasize);
                }
                else
                {
                    var10 = returndatasize;
                    require((0x60 < returndatasize));
                    temp239 = mload(0x80);
                    temp240 = mload(0xA0);
                    temp241 = mload(0xC0);
                    var6 = temp240;
                    if (temp239) 
                    {
                        var10 = func_00004E78();
                        mstore(0x40,0x120);
                        mstore(0x80,var6);
                        mstore(0xA0,arg0);

                        //ISSUE:WARNING:Block timestamp is referred.
                        mstore(0xC0,block.timestamp);
                        mstore(0xE0,arg1);
                        mstore(0x100,0x0);
                        MAPPING_9998C29D[var6] = (0x1 + MAPPING_9998C29D[var6]);
                        temp246 = mload(0x80);
                        mapping_0x2D[var6][MAPPING_9998C29D[var6]].member_0x0 = temp246;
                        temp247 = mload(0xA0);
                        mapping_0x2D[var6][MAPPING_9998C29D[var6]].member_0x1 = temp247;
                        temp248 = mload(0xC0);
                        mapping_0x2D[var6][MAPPING_9998C29D[var6]].member_0x2 = temp248;
                        temp249 = mload(0xE0);
                        mapping_0x2D[var6][MAPPING_9998C29D[var6]].member_0x3 = temp249;
                        temp250 = mload(0x100);
                        mapping_0x2D[var6][MAPPING_9998C29D[var6]].member_0x4 = temp250;
                        VAR_C8ADAE4A = (0x1 + VAR_C8ADAE4A);
                        temp252 = mload(0x80);
                        mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x0 = temp252;
                        temp253 = mload(0xA0);
                        mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x1 = temp253;
                        temp254 = mload(0xC0);
                        mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x2 = temp254;
                        temp255 = mload(0xE0);
                        mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x3 = temp255;
                        temp256 = mload(0x100);
                        mapping_0x2F[(0x1 + VAR_C8ADAE4A)].member_0x4 = temp256;
                        MAPPING_837AC5F3[arg2] = (MAPPING_837AC5F3[arg2] + arg0);
                        var10 = func_000049CA(msg.sender,uint160(VAR_40F436D9),arg0);
                        mstore(0x120,0x8288310000000000000000000000000000000000000000000000000000000000);
                        mstore(0x124,0x0);
                        var19 = uint160(uint160(sload(0x7)));
                        require(extcodesize(uint160(uint160(sload(0x7)))));

                        //ISSUE:COMMENT: External call: FUNC_82883100(0x0)
                        var14 = var19.call(0x120,0x24,0x120,0x20);
                        var14 = (var14 == 0);
                        if (var14) 
                        {
                            returndatacopy(0x0,0x0,returndatasize);
                            revert(0x0,returndatasize);
                        }
                        else
                        {
                            var12 = returndatasize;
                            require((0x20 < returndatasize));
                            return();
                        }
                    }
                    else
                    {
                        mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                        mstore(0x84,0x20);
                        mstore(0xA4,0x7);
                        mstore(0xC4,0x7265672065727200000000000000000000000000000000000000000000000000);
                        revert(0x80,0x64);
                    }
                }
            }
            else
            {
                mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
                mstore(0x84,0x20);
                mstore(0xA4,0x7);
                mstore(0xC4,0x6461792065727200000000000000000000000000000000000000000000000000);
                revert(0x80,0x64);
            }
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x5);
            mstore(0xC4,0x3E3D353030000000000000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    uint256 public totalSale;

    uint256 public VAR_FFF2DF2A;

    function func_00004E78() private return (var0)
    {
        mstore(0x40,0x120);
        mstore(0x80,0x0);
        mstore(0xA0,0x0);
        mstore(0xC0,0x0);
        mstore(0xE0,0x0);
        mstore(0x100,0x0);
        return(0x80);
    }

    function func_000049CA( uint256 arg0,uint256 arg1,uint256 arg2) private return (var0)
    {
        require(!(uint160(arg1) == uint160(0x0)));
        require((arg2 < balanceOf[uint160(uint160(arg0))]));
        require(((balanceOf[uint160(uint160(arg1))] + arg2) > balanceOf[uint160(uint160(arg1))]));
        var15 = (balanceOf[uint160(uint160(arg0))] + balanceOf[uint160(uint160(arg1))]);
        balanceOf[uint160(uint160(arg0))] = (balanceOf[uint160(uint160(arg0))] - arg2);
        balanceOf[uint160(uint160(arg1))] = (balanceOf[uint160(uint160(arg1))] + arg2);
        mstore(0x1C0,arg2);
        log(0x1C0,0x20,0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF,uint160(arg0),uint160(arg1));
        assert(((balanceOf[uint160(uint160(arg0))] + balanceOf[uint160(uint160(arg1))]) == (balanceOf[uint160(uint160(arg0))] + balanceOf[uint160(uint160(arg1))])));
        return(var10);
    }

    function func_00004CF7( uint256 arg0,uint256 arg1) private return (var0)
    {
        if ((arg0 > arg1)) 
        {
            return((arg0 - arg1));
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x10);
            mstore(0xC4,0x6C6F776572207375622062696767657200000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function func_00004D82( uint256 arg0,uint256 arg1) private return (var0)
    {
        var8 = (arg0 + arg1);
        if ((arg0 < (arg0 + arg1))) 
        {
            return(var8);
        }
        else
        {
            mstore(0x80,0x8C379A000000000000000000000000000000000000000000000000000000000);
            mstore(0x84,0x20);
            mstore(0xA4,0x8);
            mstore(0xC4,0x6F766572666C6F77000000000000000000000000000000000000000000000000);
            revert(0x80,0x64);
        }
    }

    function func_00004EA8( uint256 arg0,uint256 arg1,uint256 arg2) private return (var0)
    {
        var5 = arg0;
        if (arg2) 
        {
            var7 = arg1;
            var9 = (arg1 + (0x20 * arg2));
label_00004EBB:
            if ((var7 > var9)) 
            {
                var6 = 0x4EE4;
                var7 = var6;
                goto label_00004EE8;
            }
            else
            {
                temp166 = mload(var7);
                sstore(var8,temp166);
                var7 = (0x20 + var7);
                var8 = (0x1 + var8);
                goto label_00004EBB;
            }
        }
        else
        {
            var6 = 0x4EE4;
            var8 = arg0;
label_00004EE8:
            var7 = 0x4F0A;
            var9 = var8;
            var8 = var7;
label_00004EEE:
            if ((var9 > var8)) 
            {
                return(var5);
            }
            else
            {
                sstore(var9,0x0);
                var9 = (0x1 + var9);
                goto label_00004EEE;
            }
        }
    }

    function func_00004E0C( uint256 arg0,uint256 arg1) private return (var0)
    {
        if ((uint160(arg0) == 0x0)) 
        {
            return(var13);
        }
        else
        {
            var21 = uint160(arg0).call.gas(((arg1 == 0) * 0x8FC)).value(arg1)(0x120,0x0);
            if (var21) 
            {
                return(var13);
            }
            else
            {
                returndatacopy(0x0,0x0,returndatasize);
                revert(0x0,returndatasize);
            }
        }
    }

    function main() public return ()
    {
        mstore(0x40,0x80);
        if ((msg.data.length < 0x4)) 
        {
label_000002A2:
            stop();
        }
        else
        {
            var0 = (msg.data(0x0) / 0x100000000000000000000000000000000000000000000000000000000);

            //ISSUE:COMMENT: Function FUNC_002C9F63()
            if ((0x2C9F63 == (msg.data(0x0) / 0x100000000000000000000000000000000000000000000000000000000))) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_002C9F63(msg.data(0x4),msg.data(0x24));
                mstore(0x80,msg.data(0x4));
                mstore(0xA0,msg.data(0x24));
                mstore(0xC0,var4);
                mstore(0xE0,var5);
                mstore(0x100,var6);
                RETURN(0x80,0xA0);
            }

            //ISSUE:COMMENT: Function redeemToken()
            else if ((0x13054C2 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                redeemToken(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_045585A4()
            else if ((0x45585A4 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_045585A4(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function name()
            else if ((0x6FDDE03 == var0)) 
            {
                require(!msg.value);
                (var1,var2) = name();
                var3 = mload(0x40);
                var4 = var3;
                mstore(var3,0x20);
                temp47 = mload(var2);
                mstore((0x20 + var3),temp47);
                var5 = (0x20 + (0x20 + var3));
                temp48 = mload(var2);
                var7 = temp48;
                var8 = temp48;
                var9 = (0x20 + (0x20 + var3));
                var10 = (0x20 + var2);
                var11 = 0x0;
label_000003DD:
                if ((var8 < var11)) 
                {
                    var5 = (var7 + var5);
                    var6 = (0x1F & var7);
                    if ((0x1F & var7)) 
                    {
                        temp50 = mload((var5 - var6));
                        mstore((var5 - var6),(~(EXP(0x100,(0x20 - var6)) - 0x1) & temp50));
                        temp51 = (0x20 + (var5 - var6));
                        temp52 = mload(0x40);
                        RETURN(temp52,(temp51 - temp52));
                    }
                    else
                    {
                        temp49 = mload(0x40);
                        RETURN(temp49,(var5 - temp49));
                    }
                }
                else
                {
                    temp53 = mload((var10 + var11));
                    mstore((var9 + var11),temp53);
                    var11 = (var11 + 0x20);
                    goto label_000003DD;
                }
            }

            //ISSUE:COMMENT: Function approve()
            else if ((0x95EA7B3 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                var1 = approve(uint160(msg.data(0x4)),msg.data(0x24));
                mstore(0x80,var1);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_0ABC67B5()
            else if ((0xABC67B5 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_0ABC67B5(uint160(msg.data(0x4)));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_0D49F221()
            else if ((0xD49F221 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_0D49F221(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_146BECFA()
            else if ((0x146BECFA == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                (var1,var2) = FUNC_146BECFA(msg.data(0x4));
                mstore(0x80,var1);
                mstore(0xA0,var2);
                RETURN(0x80,0x40);
            }

            //ISSUE:COMMENT: Function totalSupply()
            else if ((0x18160DDD == var0)) 
            {
                require(!msg.value);
                var2 = totalSupply();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function getInfo()
            else if ((0x1A3CD59A == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                getInfo(msg.data(0x4));
                mstore(0x80,0x600);
                mstore(0xA0,msg.data(0x4));
                mstore(0xC0,var3);
                mstore(0xE0,var4);
                mstore(0x100,var5);
                mstore(0x120,var6);
                mstore(0x140,var7);
                mstore(0x160,var8);
                RETURN(0x80,0x100);
            }

            //ISSUE:COMMENT: Function FUNC_2029CB50()
            else if ((0x2029CB50 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_2029CB50(msg.data(0x4),msg.data(0x24));
                mstore(0x120,0x68A);
                mstore(0x140,msg.data(0x4));
                mstore(0x160,msg.data(0x24));
                mstore(0x180,var4);
                mstore(0x1A0,var5);
                mstore(0x1C0,var6);
                mstore(0x1E0,var7);
                mstore(0x200,var8);
                RETURN(0x120,0x100);
            }

            //ISSUE:COMMENT: Function gasprice_bit_ether()
            else if ((0x23B872DD == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x60 < (msg.data.length - 0x4)));
                var1 = gasprice_bit_ether(uint160(msg.data(0x4)),uint160(msg.data(0x24)),msg.data(0x44));
                mstore(0x80,var1);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_271292F5()
            else if ((0x271292F5 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                var1 = FUNC_271292F5(uint160(msg.data(0x4)),msg.data(0x24));
                mstore(0x80,var1);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_2BC9D5A1()
            else if ((0x2BC9D5A1 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_2BC9D5A1(uint160(msg.data(0x4)));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_2D2F370F()
            else if ((0x2D2F370F == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_2D2F370F(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_2FE0BB63()
            else if ((0x2FE0BB63 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_2FE0BB63(uint160(msg.data(0x4)),msg.data(0x24));
                stop();
            }

            //ISSUE:COMMENT: Function decimals()
            else if ((0x313CE567 == var0)) 
            {
                require(!msg.value);
                var2 = decimals();
                mstore(0x80,uint8(uint8(var2)));
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_32763C36()
            else if ((0x32763C36 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_32763C36(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_38540D19()
            else if ((0x38540D19 == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_38540D19();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_3B29C348()
            else if ((0x3B29C348 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_3B29C348(msg.data(0x4),msg.data(0x24));
                stop();
            }

            //ISSUE:COMMENT: Function totalBurn()
            else if ((0x3C9F861D == var0)) 
            {
                require(!msg.value);
                var2 = totalBurn();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_40F436D9()
            else if ((0x40F436D9 == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_40F436D9();
                mstore(0x80,uint160(uint160(var2)));
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function collate_propagate_storage()
            else if ((0x42966C68 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var1 = collate_propagate_storage(msg.data(0x4));
                mstore(0x80,var1);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_50973168()
            else if ((0x50973168 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_50973168(msg.data(0x4));
                mstore(0x80,msg.data(0x4));
                mstore(0xA0,var3);
                mstore(0xC0,var4);
                mstore(0xE0,var5);
                mstore(0x100,var6);
                RETURN(0x80,0xA0);
            }

            //ISSUE:COMMENT: Function FUNC_53B6A21A()
            else if ((0x53B6A21A == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_53B6A21A(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_593D16B3()
            else if ((0x593D16B3 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_593D16B3(msg.data(0x4));
                mstore(0x80,msg.data(0x4));
                mstore(0xA0,uint160(uint160(var3)));
                mstore(0xC0,var4);
                mstore(0xE0,var5);
                mstore(0x100,var6);
                RETURN(0x80,0xA0);
            }

            //ISSUE:COMMENT: Function FUNC_5DAAD7CE()
            else if ((0x5DAAD7CE == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x60 < (msg.data.length - 0x4)));
                FUNC_5DAAD7CE(uint160(msg.data(0x4)),uint160(msg.data(0x24)),msg.data(0x44));
                stop();
            }

            //ISSUE:COMMENT: Function level()
            else if ((0x6FD5AE15 == var0)) 
            {
                require(!msg.value);
                var2 = level();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function balanceOf()
            else if ((0x70A08231 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = balanceOf(uint160(msg.data(0x4)));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function setGameAddress()
            else if ((0x711953EF == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                setGameAddress(uint160(msg.data(0x4)));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_73339565()
            else if ((0x73339565 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x280 < (msg.data.length - 0x4)));
                mstore(0x40,0x1C0);
                calldatacopy(0x80,0x4,0x140);
                mstore(0x1C0,0x0);
                mstore(0x40,0x300);
                calldatacopy(0x1C0,0x144,0x140);
                mstore(0x300,0x0);
                FUNC_73339565(0x80,0x1C0);
                stop();
            }

            //ISSUE:COMMENT: Function startTime()
            else if ((0x78E97925 == var0)) 
            {
                require(!msg.value);
                var2 = startTime();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function tokenPrice()
            else if ((0x7FF9B596 == var0)) 
            {
                require(!msg.value);
                var2 = tokenPrice();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_837AC5F3()
            else if ((0x837AC5F3 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_837AC5F3(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function owner()
            else if ((0x8DA5CB5B == var0)) 
            {
                require(!msg.value);
                var2 = owner();
                mstore(0x80,uint160(uint160(var2)));
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function dev()
            else if ((0x91CCA3DB == var0)) 
            {
                require(!msg.value);
                var2 = dev();
                mstore(0x80,uint160(uint160(var2)));
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function symbol()
            else if ((0x95D89B41 == var0)) 
            {
                require(!msg.value);
                (var1,var2) = symbol();
                var3 = mload(0x40);
                var4 = var3;
                mstore(var3,0x20);
                temp174 = mload(var2);
                mstore((0x20 + var3),temp174);
                var5 = (0x20 + (0x20 + var3));
                temp175 = mload(var2);
                var7 = temp175;
                var8 = temp175;
                var9 = (0x20 + (0x20 + var3));
                var10 = (0x20 + var2);
                var11 = 0x0;
label_00000F4F:
                if ((var8 < var11)) 
                {
                    var5 = (var7 + var5);
                    var6 = (0x1F & var7);
                    if ((0x1F & var7)) 
                    {
                        temp177 = mload((var5 - var6));
                        mstore((var5 - var6),(~(EXP(0x100,(0x20 - var6)) - 0x1) & temp177));
                        temp178 = (0x20 + (var5 - var6));
                        temp179 = mload(0x40);
                        RETURN(temp179,(temp178 - temp179));
                    }
                    else
                    {
                        temp176 = mload(0x40);
                        RETURN(temp176,(var5 - temp176));
                    }
                }
                else
                {
                    temp180 = mload((var10 + var11));
                    mstore((var9 + var11),temp180);
                    var11 = (var11 + 0x20);
                    goto label_00000F4F;
                }
            }

            //ISSUE:COMMENT: Function getPrice()
            else if ((0x98D5FDCA == var0)) 
            {
                require(!msg.value);
                var1 = getPrice();
                mstore(0x80,var1);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_9998C29D()
            else if ((0x9998C29D == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_9998C29D(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_A0DACADA()
            else if ((0xA0DACADA == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_A0DACADA(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_A25069A0()
            else if ((0xA25069A0 == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_A25069A0();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_A884BB90()
            else if ((0xA884BB90 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_A884BB90(uint160(msg.data(0x4)),msg.data(0x24));
                stop();
            }

            //ISSUE:COMMENT: Function many_msg_babbage()
            else if ((0xA9059CBB == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                many_msg_babbage(uint160(msg.data(0x4)),msg.data(0x24));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_ABB1DC44()
            else if ((0xABB1DC44 == var0)) 
            {
                require(!msg.value);
                FUNC_ABB1DC44();
                mstore(0x80,0x1166);
                mstore(0xA0,var2);
                mstore(0xC0,var3);
                RETURN(0x80,0x60);
            }

            //ISSUE:COMMENT: Function FUNC_ADBE3834()
            else if ((0xADBE3834 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_ADBE3834(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_B45D78AB()
            else if ((0xB45D78AB == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_B45D78AB();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_C8ADAE4A()
            else if ((0xC8ADAE4A == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_C8ADAE4A();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_C8BCE912()
            else if ((0xC8BCE912 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_C8BCE912(msg.data(0x4));
                mstore(0x120,0x1268);
                mstore(0x140,msg.data(0x4));
                mstore(0x160,var3);
                mstore(0x180,var4);
                mstore(0x1A0,var5);
                RETURN(0x120,0xA0);
            }

            //ISSUE:COMMENT: Function FUNC_CDFDFE3F()
            else if ((0xCDFDFE3F == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x60 < (msg.data.length - 0x4)));
                FUNC_CDFDFE3F(uint160(msg.data(0x4)),uint160(msg.data(0x24)),msg.data(0x44));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_D2851499()
            else if ((0xD2851499 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                FUNC_D2851499(uint160(msg.data(0x4)),msg.data(0x24));
                stop();
            }

            //ISSUE:COMMENT: Function buy()
            else if ((0xD96A094A == var0)) 
            {
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                buy(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_D9E17337()
            else if ((0xD9E17337 == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                var2 = FUNC_D9E17337(msg.data(0x4));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function allowance()
            else if ((0xDD62ED3E == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x40 < (msg.data.length - 0x4)));
                var2 = allowance(uint160(msg.data(0x4)),uint160(msg.data(0x24)));
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_E56A301C()
            else if ((0xE56A301C == var0)) 
            {
                require(!msg.value);
                var3 = (msg.data.length - 0x4);
                require((0x20 < (msg.data.length - 0x4)));
                FUNC_E56A301C(msg.data(0x4));
                stop();
            }

            //ISSUE:COMMENT: Function FUNC_E5A688FC()
            else if ((0xE5A688FC == var0)) 
            {
                var3 = (msg.data.length - 0x4);
                require((0x60 < (msg.data.length - 0x4)));
                FUNC_E5A688FC(msg.data(0x4),msg.data(0x24),msg.data(0x44));
                stop();
            }

            //ISSUE:COMMENT: Function totalSale()
            else if ((0xEA4CE239 == var0)) 
            {
                require(!msg.value);
                var2 = totalSale();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }

            //ISSUE:COMMENT: Function FUNC_FFF2DF2A()
            else if ((0xFFF2DF2A == var0)) 
            {
                require(!msg.value);
                var2 = FUNC_FFF2DF2A();
                mstore(0x80,var2);
                RETURN(0x80,0x20);
            }
            else
            {
                goto label_000002A2;
            }
        }
    }

}
